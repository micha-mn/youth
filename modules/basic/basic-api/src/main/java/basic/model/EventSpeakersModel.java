/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package basic.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import java.sql.Blob;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the EventSpeakers service. Represents a row in the &quot;EventSpeakers&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>basic.model.impl.EventSpeakersModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>basic.model.impl.EventSpeakersImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see EventSpeakers
 * @generated
 */
@ProviderType
public interface EventSpeakersModel extends BaseModel<EventSpeakers> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a event speakers model instance should use the {@link EventSpeakers} interface instead.
	 */

	/**
	 * Returns the primary key of this event speakers.
	 *
	 * @return the primary key of this event speakers
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this event speakers.
	 *
	 * @param primaryKey the primary key of this event speakers
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this event speakers.
	 *
	 * @return the uuid of this event speakers
	 */
	@AutoEscape
	public String getUuid();

	/**
	 * Sets the uuid of this event speakers.
	 *
	 * @param uuid the uuid of this event speakers
	 */
	public void setUuid(String uuid);

	/**
	 * Returns the ID of this event speakers.
	 *
	 * @return the ID of this event speakers
	 */
	public long getId();

	/**
	 * Sets the ID of this event speakers.
	 *
	 * @param id the ID of this event speakers
	 */
	public void setId(long id);

	/**
	 * Returns the position of this event speakers.
	 *
	 * @return the position of this event speakers
	 */
	@AutoEscape
	public String getPosition();

	/**
	 * Sets the position of this event speakers.
	 *
	 * @param position the position of this event speakers
	 */
	public void setPosition(String position);

	/**
	 * Returns the speaker image of this event speakers.
	 *
	 * @return the speaker image of this event speakers
	 */
	public Blob getSpeakerImage();

	/**
	 * Sets the speaker image of this event speakers.
	 *
	 * @param speakerImage the speaker image of this event speakers
	 */
	public void setSpeakerImage(Blob speakerImage);

	/**
	 * Returns the speaker image string of this event speakers.
	 *
	 * @return the speaker image string of this event speakers
	 */
	@AutoEscape
	public String getSpeakerImageString();

	/**
	 * Sets the speaker image string of this event speakers.
	 *
	 * @param speakerImageString the speaker image string of this event speakers
	 */
	public void setSpeakerImageString(String speakerImageString);

	/**
	 * Returns the nationality of this event speakers.
	 *
	 * @return the nationality of this event speakers
	 */
	@AutoEscape
	public String getNationality();

	/**
	 * Sets the nationality of this event speakers.
	 *
	 * @param nationality the nationality of this event speakers
	 */
	public void setNationality(String nationality);

	/**
	 * Returns the email of this event speakers.
	 *
	 * @return the email of this event speakers
	 */
	@AutoEscape
	public String getEmail();

	/**
	 * Sets the email of this event speakers.
	 *
	 * @param email the email of this event speakers
	 */
	public void setEmail(String email);

	/**
	 * Returns the first name of this event speakers.
	 *
	 * @return the first name of this event speakers
	 */
	@AutoEscape
	public String getFirstName();

	/**
	 * Sets the first name of this event speakers.
	 *
	 * @param firstName the first name of this event speakers
	 */
	public void setFirstName(String firstName);

	/**
	 * Returns the user ID of this event speakers.
	 *
	 * @return the user ID of this event speakers
	 */
	@AutoEscape
	public String getUserId();

	/**
	 * Sets the user ID of this event speakers.
	 *
	 * @param userId the user ID of this event speakers
	 */
	public void setUserId(String userId);

	/**
	 * Returns the last name of this event speakers.
	 *
	 * @return the last name of this event speakers
	 */
	@AutoEscape
	public String getLastName();

	/**
	 * Sets the last name of this event speakers.
	 *
	 * @param lastName the last name of this event speakers
	 */
	public void setLastName(String lastName);

	/**
	 * Returns the is notification sent of this event speakers.
	 *
	 * @return the is notification sent of this event speakers
	 */
	@AutoEscape
	public String getIsNotificationSent();

	/**
	 * Sets the is notification sent of this event speakers.
	 *
	 * @param isNotificationSent the is notification sent of this event speakers
	 */
	public void setIsNotificationSent(String isNotificationSent);

	/**
	 * Returns the event ID of this event speakers.
	 *
	 * @return the event ID of this event speakers
	 */
	@AutoEscape
	public String getEventId();

	/**
	 * Sets the event ID of this event speakers.
	 *
	 * @param eventId the event ID of this event speakers
	 */
	public void setEventId(String eventId);

	/**
	 * Returns the is notif enabled of this event speakers.
	 *
	 * @return the is notif enabled of this event speakers
	 */
	@AutoEscape
	public String getIsNotifEnabled();

	/**
	 * Sets the is notif enabled of this event speakers.
	 *
	 * @param isNotifEnabled the is notif enabled of this event speakers
	 */
	public void setIsNotifEnabled(String isNotifEnabled);

}