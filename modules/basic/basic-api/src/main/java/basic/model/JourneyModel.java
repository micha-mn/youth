/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package basic.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import java.sql.Blob;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the Journey service. Represents a row in the &quot;journey&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>basic.model.impl.JourneyModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>basic.model.impl.JourneyImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Journey
 * @generated
 */
@ProviderType
public interface JourneyModel extends BaseModel<Journey> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a journey model instance should use the {@link Journey} interface instead.
	 */

	/**
	 * Returns the primary key of this journey.
	 *
	 * @return the primary key of this journey
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this journey.
	 *
	 * @param primaryKey the primary key of this journey
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the journey ID of this journey.
	 *
	 * @return the journey ID of this journey
	 */
	public long getJourneyId();

	/**
	 * Sets the journey ID of this journey.
	 *
	 * @param journeyId the journey ID of this journey
	 */
	public void setJourneyId(long journeyId);

	/**
	 * Returns the user ID of this journey.
	 *
	 * @return the user ID of this journey
	 */
	@AutoEscape
	public String getUserId();

	/**
	 * Sets the user ID of this journey.
	 *
	 * @param userId the user ID of this journey
	 */
	public void setUserId(String userId);

	/**
	 * Returns the title of this journey.
	 *
	 * @return the title of this journey
	 */
	@AutoEscape
	public String getTitle();

	/**
	 * Sets the title of this journey.
	 *
	 * @param title the title of this journey
	 */
	public void setTitle(String title);

	/**
	 * Returns the description of this journey.
	 *
	 * @return the description of this journey
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this journey.
	 *
	 * @param description the description of this journey
	 */
	public void setDescription(String description);

	/**
	 * Returns the picture blob of this journey.
	 *
	 * @return the picture blob of this journey
	 */
	public Blob getPictureBlob();

	/**
	 * Sets the picture blob of this journey.
	 *
	 * @param pictureBlob the picture blob of this journey
	 */
	public void setPictureBlob(Blob pictureBlob);

}